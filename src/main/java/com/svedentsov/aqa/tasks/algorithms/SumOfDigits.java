package com.svedentsov.aqa.tasks.algorithms;

/**
 * Решение задачи №29: Сумма цифр числа.
 * Описание: Написать функцию для вычисления суммы цифр целого числа.
 * (Проверяет: циклы, арифметика, остаток от деления)
 * Задание: Напишите метод `int sumDigits(int number)`, который вычисляет и
 * возвращает сумму цифр целого числа `number`. (Для отрицательных чисел сумма
 * цифр равна сумме цифр абсолютного значения).
 * Пример: `sumDigits(123)` -> `6`, `sumDigits(49)` -> `13`, `sumDigits(5)` -> `5`,
 * `sumDigits(0)` -> `0`, `sumDigits(-123)` -> `6`.
 */
public class SumOfDigits {

    /**
     * Вычисляет сумму цифр заданного целого числа.
     * Работает корректно как для положительных, так и для отрицательных чисел
     * (сумма цифр отрицательного числа равна сумме цифр его абсолютного значения).
     * Использует цикл и операции остатка от деления (%) и целочисленного деления (/).
     *
     * @param number Целое число для вычисления суммы цифр.
     * @return Сумма цифр числа. Для 0 возвращает 0.
     */
    public int sumDigits(int number) {
        // Работаем с абсолютным значением, чтобы корректно обработать отрицательные числа
        // Используем long для промежуточного значения на случай number = Integer.MIN_VALUE,
        // так как Math.abs(Integer.MIN_VALUE) вернет Integer.MIN_VALUE из-за переполнения.
        long absNumber = Math.abs((long) number);
        int sum = 0;

        // Если исходное число 0, цикл не начнется, вернется sum = 0.
        while (absNumber > 0) {
            // Получаем последнюю цифру (0-9) и добавляем к сумме
            // Приведение типа к int безопасно, так как остаток от деления на 10 всегда будет маленьким числом.
            sum += (int) (absNumber % 10);
            // Убираем последнюю цифру
            absNumber /= 10;
        }

        return sum;
    }
}
