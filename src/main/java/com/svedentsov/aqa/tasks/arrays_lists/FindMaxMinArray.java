package com.svedentsov.aqa.tasks.arrays_lists;

/**
 * Решение задачи №6: Найти максимальный/минимальный элемент в массиве.
 * <p>
 * Описание: Написать функцию для поиска наибольшего или наименьшего числа
 * в массиве/списке без использования встроенных функций max/min коллекций (иногда просят).
 * (Проверяет: циклы, сравнения)
 * <p>
 * Задание: Напишите метод `int findMax(int[] numbers)`, который находит и возвращает
 * максимальное значение в массиве `numbers` без использования `Collections.max()`
 * или `Stream.max()`. Обработайте случай пустого массива (например, выбросив
 * исключение). Аналогично для `findMin`.
 * <p>
 * Пример: `findMax(new int[]{1, 5, 2, 9, 3})` -> `9`.
 * `findMax(new int[]{-1, -5, -2})` -> `-1`.
 */
public class FindMaxMinArray {

    /**
     * Находит максимальный элемент в массиве целых чисел итеративным способом.
     * Проходит по массиву, сравнивая текущий элемент с текущим максимумом.
     * Сложность O(n) по времени, O(1) по памяти.
     *
     * @param numbers Массив целых чисел.
     * @return Максимальное значение в массиве.
     * @throws IllegalArgumentException если массив null или пуст.
     */
    public int findMax(int[] numbers) {
        // Проверка на недопустимые входные данные
        if (numbers == null || numbers.length == 0) {
            throw new IllegalArgumentException("Input array cannot be null or empty.");
        }
        // Инициализируем максимум первым элементом массива
        int max = numbers[0];
        // Итерируем со второго элемента (индекс 1), т.к. первый уже взят как max
        for (int i = 1; i < numbers.length; i++) {
            // Если текущий элемент больше текущего максимума, обновляем максимум
            if (numbers[i] > max) {
                max = numbers[i];
            }
        }
        return max; // Возвращаем найденный максимум
    }

    /**
     * Находит минимальный элемент в массиве целых чисел итеративным способом.
     * Проходит по массиву, сравнивая текущий элемент с текущим минимумом.
     * Сложность O(n) по времени, O(1) по памяти.
     *
     * @param numbers Массив целых чисел.
     * @return Минимальное значение в массиве.
     * @throws IllegalArgumentException если массив null или пуст.
     */
    public int findMin(int[] numbers) {
        // Проверка на недопустимые входные данные
        if (numbers == null || numbers.length == 0) {
            throw new IllegalArgumentException("Input array cannot be null or empty.");
        }
        // Инициализируем минимум первым элементом массива
        int min = numbers[0];
        // Итерируем со второго элемента (индекс 1)
        for (int i = 1; i < numbers.length; i++) {
            // Если текущий элемент меньше текущего минимума, обновляем минимум
            if (numbers[i] < min) {
                min = numbers[i];
            }
        }
        return min; // Возвращаем найденный минимум
    }
}
